using UnityEngine;
using System.Collections;

public class spawnEnemy : MonoBehaviour
{
    [SerializeField] private GameObject[] enemies;          // Qu√°i th∆∞·ªùng
    [SerializeField] private GameObject miniBossPrefab;     // Mini Boss
    [SerializeField] private GameObject bossPrefab;         // Boss l·ªõn

    [SerializeField] private Transform[] spawnLocation;     // V·ªã tr√≠ spawn
    [SerializeField] private float time = 2f;               // Th·ªùi gian spawn qu√°i th∆∞·ªùng

    private float timer = 0f;                // Th·ªùi gian ch∆°i t·ªïng c·ªông
    private bool miniBossSpawned = false;    // Ki·ªÉm tra ƒë√£ spawn mini boss ch∆∞a
    private bool bossSpawned = false;        // Ki·ªÉm tra ƒë√£ spawn boss ch∆∞a

    void Start()
    {
        StartCoroutine(SpawnEnemy());
    }

    void Update()
    {
        timer += Time.deltaTime;

        if (timer >= 300f && !miniBossSpawned) // Sau 5 ph√∫t
        {
            SpawnMiniBoss();
            miniBossSpawned = true;
        }

        if (timer >= 600f && !bossSpawned) // Sau 10 ph√∫t
        {
            SpawnBoss();
            bossSpawned = true;
        }
    }

    private IEnumerator SpawnEnemy()
    {
        while (true)
        {
            yield return new WaitForSeconds(time);
            GameObject enemy = enemies[Random.Range(0, enemies.Length)];
            Transform spawn = spawnLocation[Random.Range(0, spawnLocation.Length)];
            Instantiate(enemy, spawn.position, Quaternion.identity);
        }
    }

    private void SpawnMiniBoss()
    {
        Transform spawn = spawnLocation[Random.Range(0, spawnLocation.Length)];
        Instantiate(miniBossPrefab, spawn.position, Quaternion.identity);
        Debug.Log("Mini Boss ƒë√£ xu·∫•t hi·ªán! ‚öîÔ∏è");
    }

    private void SpawnBoss()
    {
        Transform spawn = spawnLocation[Random.Range(0, spawnLocation.Length)];
        Instantiate(bossPrefab, spawn.position, Quaternion.identity);
        Debug.Log("Boss to t·ªï b·ªë xu·∫•t hi·ªán r·ªìi ƒë√≥ Sensei!! üíÄüí¢");
    }
}
